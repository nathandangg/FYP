#python:
b_scan_cnt = 3 
pos = [0.73, 0.532, 0.73]
radius =  0.23

src_to_trunk_center = pos[current_model_run - 1]
resolution = 0.002
time_window = 3e-8 #do a study
pml_cells = 25

x_gap = 0.05
y_gap = 0.02
src_to_pml = 0.05
src_to_rx = 0.1


# Derived Parameters
src_to_trunk = src_to_trunk_center-radius
diameter = radius* 2
    
pml = resolution * pml_cells
sharp_domain = [diameter, diameter + src_to_trunk]
domain = [sharp_domain[0] + pml * 2 + x_gap * 2, sharp_domain[1] +  pml * 2 + y_gap + src_to_pml]

trunk_center = [radius + pml + x_gap, src_to_trunk + radius + pml + src_to_pml]
src_position = [trunk_center[0] - (src_to_rx / 2), pml + src_to_pml, 0]
rx_position = [src_position[0] + src_to_rx, src_position[1], 0]

print('#title: Rotating Straight Scan')
print("#domain: {:.3f} {:.3f} 0.002".format(domain[0], domain[1]))
print("#dx_dy_dz: {} {} {}".format(resolution, resolution, resolution))
print("#time_window: {}".format(time_window))
print()
print('#pml_cells: {} {} 0 {} {} 0'.format(pml_cells, pml_cells, pml_cells, pml_cells))
print()
print("#geometry_objects_read: {:.3f} {:.3f} 0 h5/defect0_{}.h5 materials.txt".format((trunk_center[0]) - radius, (trunk_center[1]) - radius, current_model_run - 1)) 
print()
print('#waveform: ricker 1 1e9 my_ricker')
print("#hertzian_dipole: z {:.3f} {:.3f} {:.3f} my_ricker".format(src_position[0], src_position[1], src_position[2]))
print("#rx: {:.3f} {:.3f} {:.3f}".format(rx_position[0], rx_position[1], rx_position[2]))
if (current_model_run == (b_scan_cnt - 1)/2):
       print("#geometry_objects_write: {:.3f} {:.3f} 0 {:.3f} {:.3f} 0.002 defect".format(trunk_center[0] - radius, trunk_center[1] - src_to_trunk_center, trunk_center[0] + radius, trunk_center[1] + radius))
#end_python:
